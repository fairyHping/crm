<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhidi.system.dao.IBusinessDao">
  <resultMap id="BaseResultMap" type="com.zhidi.system.entity.Business">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="origin" jdbcType="VARCHAR" property="origin" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="estimate_price" jdbcType="INTEGER" property="estimatePrice" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="creator_user_id" jdbcType="INTEGER" property="creatorUserId" />
    <result column="owner_user_id" jdbcType="INTEGER" property="ownerUserId" />
    <result column="gain_rate" jdbcType="INTEGER" property="gainRate" />
    <result column="total_amount" jdbcType="INTEGER" property="totalAmount" />
    <result column="subtotal_val" jdbcType="REAL" property="subtotalVal" />
    <result column="discount_price" jdbcType="REAL" property="discountPrice" />
    <result column="sales_price" jdbcType="REAL" property="salesPrice" />
    <result column="due_date" jdbcType="DATE" property="dueDate" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
    <result column="status_id" jdbcType="INTEGER" property="statusId" />
    <result column="total_price" jdbcType="REAL" property="totalPrice" />
    <result column="nextstep" jdbcType="VARCHAR" property="nextstep" />
    <result column="nextstep_time" jdbcType="TIMESTAMP" property="nextstepTime" />
    <result column="delete_status" jdbcType="INTEGER" property="deleteStatus" />
    <result column="delete_user_id" jdbcType="INTEGER" property="deleteUserId" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
    <result column="contacts_id" jdbcType="INTEGER" property="contactsId" />
    <result column="contract_address" jdbcType="VARCHAR" property="contractAddress" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  
  	<resultMap type="com.zhidi.system.entity.Business" id="BusinessResultMap" extends="BaseResultMap">
  	<association property="customer" column="customerId" resultMap="com.zhidi.system.dao.ICustomerDao.BaseResultMap" columnPrefix="c_"/>
		<association property="user" column="ownerUserId" resultMap="com.zhidi.system.dao.IUserDao.BaseResultMap" columnPrefix="cu_"/>
		<association property="creator" column="creatorUserId" resultMap="com.zhidi.system.dao.IUserDao.BaseResultMap" columnPrefix="u_"/>
	
	</resultMap>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_crm_business
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhidi.system.entity.Business">
      insert into tb_crm_business ( 
      customer_id, origin, 
       nextstep_time, nextstep,
      creator_user_id, owner_user_id, 
      create_time, update_time
      )
      values ( 
      #{customerId,jdbcType=VARCHAR}, #{origin,jdbcType=VARCHAR}, 
       #{nextstepTime,jdbcType=TIMESTAMP},#{nextstep,jdbcType=VARCHAR},
      #{creatorUserId,jdbcType=INTEGER}, #{ownerUserId,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP} 
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zhidi.system.entity.Business">
     update tb_crm_business
    set
      customer_id = #{customerId,jdbcType=INTEGER},
      origin = #{origin,jdbcType=VARCHAR},
      creator_user_id = #{creatorUserId,jdbcType=INTEGER},
      owner_user_id = #{ownerUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      nextstep = #{nextstep,jdbcType=VARCHAR},
      nextstep_time = #{nextstepTime,jdbcType=TIMESTAMP}
      where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BusinessResultMap">
    select
		b.id,
		b.customer_id,
		b.origin,
		b.nextstep_time,
		b.nextstep,
		b.owner_user_id,
		b.creator_user_id,
		b.create_time,
		b.update_time,
		c.customer_id as c_customer_id,
		c.name as c_name,
		c.industry as  c_industry,
		c.rating  as   c_rating,
		c.address as  c_adress,
		c.zip_code as  c_zip_code,
		c.owner_user_id   as   c_owner_user_id,
		c.creator_user_id as  c_creator_user_id,
		c.create_time  as   c_create_tme,
		c.update_time as c_update_time,
		u.user_id   as u_user_id, 
		u.user_name   as u_user_name,
		u.password   as   u_password,
		u.salt   as  u_salt,
		u.phone   as   u_phone,
		u.email   as u_email,
		u.status  as u_status,
		u.note  as  u_note,
	 	u.create_time   as      u_create_time,
	 	u.update_time   as      u_update_time,
		cu.user_id   as cu_user_id, 
		cu.user_name   as cu_user_name,
		cu.password   as   cu_password,
		cu.salt   as  cu_salt,
		cu.phone   as   cu_phone,
		cu.email   as cu_email,
		cu.status  as cu_status,
		cu.note  as  cu_note,
	  	cu.create_time   as      cu_create_time,
	 	cu.update_time   as      cu_update_time
		from tb_crm_business b left join  tb_crm_customer c on b.customer_id=c.customer_id
		left join tb_users u on c.creator_user_id=u.user_id 
		left join tb_users cu on c.owner_user_id=cu.user_id
         where b.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, origin, type, estimate_price, customer_id, creator_user_id, owner_user_id, 
    gain_rate, total_amount, subtotal_val, discount_price, sales_price, due_date, create_time, 
    update_time, update_user_id, status_id, total_price, nextstep, nextstep_time, delete_status, 
    delete_user_id, delete_time, contacts_id, contract_address, description
    from tb_crm_business
  </select>
  
  <!-- 根据查询条件获取总记录数 -->
	 <select id="count" resultType="integer">
		select count(customer_id) from tb_crm_customer
		<where>
			<if test="con!=null and !con.isEmpty()">
				<if test="con.name!=null and con.name!=''">
					name = #{con.name}
				</if>
			</if>
		</where>
	</select>

	<!-- 分页查询语句 -->
	<select id="findByPage" resultMap="BusinessResultMap">
		select
		b.id,
		b.customer_id,
		b.origin,
		b.nextstep_time,
		b.nextstep,
		b.owner_user_id,
		b.creator_user_id,
		b.create_time,
		b.update_time,
		c.customer_id as c_customer_id,
		c.name as c_name,
		c.industry as  c_industry,
		c.rating  as   c_rating,
		c.address as  c_adress,
		c.zip_code as  c_zip_code,
		c.owner_user_id   as   c_owner_user_id,
		c.creator_user_id as  c_creator_user_id,
		c.create_time  as   c_create_tme,
		c.update_time as c_update_time,
		u.user_id   as u_user_id, 
		u.user_name   as u_user_name,
		u.password   as   u_password,
		u.salt   as  u_salt,
		u.phone   as   u_phone,
		u.email   as u_email,
		u.status  as u_status,
		u.note  as  u_note,
	 	u.create_time   as      u_create_time,
	 	u.update_time   as      u_update_time,
		cu.user_id   as cu_user_id, 
		cu.user_name   as cu_user_name,
		cu.password   as   cu_password,
		cu.salt   as  cu_salt,
		cu.phone   as   cu_phone,
		cu.email   as cu_email,
		cu.status  as cu_status,
		cu.note  as  cu_note,
	  	cu.create_time   as      cu_create_time,
	 	cu.update_time   as      cu_update_time
		from tb_crm_business b left join  tb_crm_customer c on b.customer_id=c.customer_id
		left join tb_users u on c.creator_user_id=u.user_id 
		left join tb_users cu on c.owner_user_id=cu.user_id
		<where>
			<if test="con!=null and !con.isEmpty()">
				<if test="con.name!=null and con.name!=''">
					b.name = #{con.name}
				</if>
             </if>
		</where>
		limit #{offset},#{pageSize}
	</select> 
	<!-- 删除商机，可批量删除 -->
	<delete id="deleteBusiness">
	delete from tb_crm_business
		where id in
		<foreach collection="businessIds" item="id" open="(" close=")" separator=",">
		#{id}
		</foreach>	
	</delete> 
<select id="findById" resultMap="BusinessResultMap">	
	select
		b.id,
		b.customer_id,
		b.origin,
		b.nextstep_time,
		b.nextstep,
		b.owner_user_id,
		b.creator_user_id,
		b.create_time,
		b.update_time,
		c.customer_id as c_customer_id,
		c.name as c_name,
		c.industry as  c_industry,
		c.rating  as   c_rating,
		c.address as  c_adress,
		c.zip_code as  c_zip_code,
		c.owner_user_id   as   c_owner_user_id,
		c.creator_user_id as  c_creator_user_id,
		c.create_time  as   c_create_tme,
		c.update_time as c_update_time,
		u.user_id   as u_user_id, 
		u.user_name   as u_user_name,
		u.password   as   u_password,
		u.salt   as  u_salt,
		u.phone   as   u_phone,
		u.email   as u_email,
		u.status  as u_status,
		u.note  as  u_note,
	 	u.create_time   as      u_create_time,
	 	u.update_time   as      u_update_time,
		cu.user_id   as cu_user_id, 
		cu.user_name   as cu_user_name,
		cu.password   as   cu_password,
		cu.salt   as  cu_salt,
		cu.phone   as   cu_phone,
		cu.email   as cu_email,
		cu.status  as cu_status,
		cu.note  as  cu_note,
	  	cu.create_time   as      cu_create_time,
	 	cu.update_time   as      cu_update_time
		from tb_crm_business b left join  tb_crm_customer c on b.customer_id=c.customer_id
		left join tb_users u on c.creator_user_id=u.user_id 
		left join tb_users cu on c.owner_user_id=cu.user_id	
        where  b.id =#{id}	
 </select>
 <!--查询商机单个信息  -->
 <select id="origin" resultType="string" >
 
   select distinct origin from tb_crm_business 
   
 </select>
</mapper>