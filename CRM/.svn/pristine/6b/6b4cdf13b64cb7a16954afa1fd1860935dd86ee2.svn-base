<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhidi.system.dao.IRoleDao">
	<resultMap id="BaseResultMap" type="com.zhidi.system.entity.Role">
		<id column="role_id" jdbcType="INTEGER" property="roleId" />
		<result column="role_name" jdbcType="VARCHAR" property="roleName" />
		<result column="note" jdbcType="VARCHAR" property="note" />
		<result column="system" jdbcType="BIT" property="system" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	</resultMap>

	<resultMap type="com.zhidi.system.entity.Role" id="RoleFuncResultMap"
		extends="BaseResultMap">
		<collection property="functions"
			resultMap="com.zhidi.system.dao.IFunctionDao.BaseResultMap"
			columnPrefix="f_" />
	</resultMap>
	<sql id="basicColumns">
		role_id,role_name,note,system,status,create_time,update_time
	</sql>

	<sql id="roleColumns">
		r.role_id,r.role_name,r.note,r.system,r.status,r.create_time,r.update_time
	</sql>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		tb_roles
		where role_id = #{roleId,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="com.zhidi.system.entity.Role">
		insert into tb_roles
		(role_name, note,
		system, status, create_time,
		update_time)
		values
		(#{roleName,jdbcType=VARCHAR},
		#{note,jdbcType=VARCHAR},
		#{system,jdbcType=BIT}, #{status,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP})
	</insert>

	<update id="updateByPrimaryKey" parameterType="com.zhidi.system.entity.Role">
		update tb_roles
		set role_name = #{roleName,jdbcType=VARCHAR},
		note =
		#{note,jdbcType=VARCHAR},
		system = #{system,jdbcType=BIT},
		status =
		#{status,jdbcType=INTEGER},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP}
		where role_id =
		#{roleId,jdbcType=INTEGER}
	</update>

	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select role_id, role_name, note, system, status,
		create_time, update_time
		from tb_roles
		where role_id =
		#{roleId,jdbcType=INTEGER}
	</select>


	<select id="selectAll" resultMap="BaseResultMap">
		select role_id, role_name,
		note, system, status, create_time, update_time
		from tb_roles
	</select>

	<!--根据用户id和角色状态查询 -->
	<select id="findRoleByUserId" resultMap="BaseResultMap">
		select
		<include refid="basicColumns" />
		from tb_roles
		<where>
			<choose>
				<when test="status == null">
					status =1
				</when>
				<otherwise>
					status=#{status}
				</otherwise>
			</choose>
			<if test="userId!=null">
				and role_id in(select role_id from tb_user_role where
				user_id=#{userId})
			</if>

		</where>
	</select>
	<!-- 查询总记录数 -->
	<select id="count" resultType="integer">
		select count(role_id) from tb_roles
		<where>
			<if test="con!=null and !con.isEmpty()">
				<if test="con.roleName!=null and con.roleName!=''">
					and role_name like concat('%',#{con.roleName},'%')
				</if>
				<if test="con.funcId!=null and con.funcId!=''">
					and role_id in(select role_id from tb_role_function
					where func_id =#{con.funcId})
				</if>
				<if test="con.status!=null and con.status!=''">
					and status=#{con.status}
				</if>
			</if>
		</where>
	</select>

	<!-- 分页查询 -->
	<select id="findByPage" resultMap="RoleFuncResultMap">
		select
		<include refid="roleColumns" />
		,
		f.func_id f_func_id,
		f.func_name f_func_name,
		f.func_url f_func_url,
		f.func_code f_func_code,
		f.parent_id f_parent_id,
		f.func_type
		f_func_type,
		f.status f_status,
		f.sort_num f_sort_num,
		f.create_time
		f_create_time,
		f.update_time f_update_time
		from (select
		<include refid="basicColumns" />
		from tb_roles
		<where>
			<if test="con!=null and !con.isEmpty()">
				<if test="con.roleName!=null and con.roleName!=''">
					and role_name like concat('%',#{con.roleName},'%')
				</if>
				<if test="con.status!=null and con.status!=''">
					and status=#{con.status}
				</if>
			</if>
		</where>
		limit #{offset},#{pageSize}
		) r
		left join tb_role_function rf
		on r.role_id=rf.role_id
		left join tb_functions f
		on rf.func_id=f.func_id
		<where>
			<if test="con!=null and !con.isEmpty()">
				<if test="con.funcId!=null and con.funcId!=''">
					and rf.func_id =#{con.funcId}
				</if>
			</if>
		</where>

	</select>
	<!-- 逻辑删除角色信息，可批量删除 -->
	<update id="deleteRole">
		update tb_roles set status=2
		where role_id in
		<foreach collection="roleIds" item="roleId" open="(" close=")"
			separator=",">
			#{roleId}
		</foreach>
	</update>
</mapper>