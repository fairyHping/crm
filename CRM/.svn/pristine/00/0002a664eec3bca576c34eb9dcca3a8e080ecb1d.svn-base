package com.zhidi.system.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.zhidi.common.result.JsonResult;
import com.zhidi.common.result.PageBean;
import com.zhidi.system.entity.Department;
import com.zhidi.system.entity.Product;
import com.zhidi.system.service.IDepartemtService;

/**
*2017年11月10日
*@author 作者: Zhang
*描述：
*/
@Controller
@RequestMapping("/system/hr")
public class HrController {
	
	@Autowired
	protected IDepartemtService departmentService;
	
	/**
	 * 部门页面控制器
	 * @return
	 */
	@GetMapping("/department")
	public String listDepartment(Model model){
		List<Department> list=departmentService.findAll();
		model.addAttribute("depts", list);
		return "system/hr/listDepartment";
	}

	@PostMapping("/listDepartment")
	@ResponseBody
	public JsonResult doListDepartment(PageBean<Department> page){
		page=departmentService.findByPage(page);
		return JsonResult.buildSuccessResult("操作成功", page);		
	}
	
	/**
	 * 添加部门控制器
	 * @param model
	 * @return
	 */
	@GetMapping("/addDepartment")
	public String addDepartment(Model model){
		List<Department> list=departmentService.findAll();
		model.addAttribute("department", list);
		return "system/hr/addDepartment";
	}
	
	/**
	 * 执行部门添加控制器
	 * @param departmnet
	 * @return
	 */
	@PostMapping("/doAddDepartment")
	@ResponseBody
	public JsonResult doAddDepartment(Department departmnet){
		int rows=departmentService.save(departmnet);
		if(rows>0){
			return JsonResult.buildSuccessResult("添加成功");
		}else{
			return JsonResult.buildFailureResult(rows,"添加失败");
		}	
	}
	
	/**
	 * 修改部门
	 * @param model
	 * @param id
	 * @return
	 */
	@GetMapping("/updateDepartment")
	public String updateDepartment(Model model,Integer departmentId){
		Department dept=departmentService.findById(departmentId);
		model.addAttribute("department", dept);
		List<Department> list=departmentService.findAll();
		model.addAttribute("depts", list);
		return "system/hr/updateDepartment";
	}
	
	/**
	 * 执行修改部门
	 * @param department
	 * @return
	 */
	@PostMapping("/doUpdateDepartment")
	@ResponseBody
	public JsonResult doUpdateDepartment(Department department){
		int rows=departmentService.update(department);
		if(rows>0){
			return JsonResult.buildSuccessResult("修改成功");
		}else{
			return JsonResult.buildFailureResult(rows,"修改失败");
		}	
	}
	
	@PostMapping("/deleteDepartment")
	@ResponseBody
	public JsonResult deleteDepartment(String departmentIds){
		int rows=departmentService.deleteDepartment(departmentIds);
		if(rows>0){
			return JsonResult.buildSuccessResult("删除成功");
		}else{
			return JsonResult.buildFailureResult(rows,"删除失败");
		}	
	}
}

