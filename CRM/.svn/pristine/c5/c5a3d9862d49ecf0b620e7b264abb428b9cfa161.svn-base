package com.zhidi.system.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.zhidi.common.result.JsonResult;
import com.zhidi.common.result.PageBean;
import com.zhidi.system.entity.Function;
import com.zhidi.system.service.IFunctionService;

/**
* @author 作者:ZHP
* createTime 创建时间:2017年11月2日
* 类描述：
*/
@Controller
@RequestMapping("/system/functions")
public class FunctionController {
	
	@Autowired
	private IFunctionService funcService;
	
	@RequestMapping("/list")
	public String toListUsers() {
		return "system/function/listFunctions";
	}
	
	@RequestMapping("/listAll")
	@ResponseBody
	public JsonResult listAll(){
		List<Function> funcs=funcService.findAll();
		return JsonResult.buildSuccessResult("查询成功", funcs);
	}
	
	@PostMapping("/listFunctions")
	@ResponseBody
	public JsonResult listFunctions(PageBean<Function> page){
		page=funcService.findByPage(page);
		return JsonResult.buildSuccessResult("查询成功", page);	
	}
	
	@RequestMapping("/listParent")
	@ResponseBody
	public JsonResult listParent(){
		List<Function> functions=funcService.listParentFunction();
		return JsonResult.buildSuccessResult("查询成功", functions);
	}
	
	/**
	 * 根据角色id查询对应的权限
	 * @param roleIds -某个角色的id
	 * @return
	 */
	@PostMapping("/findByRoleId")
	@ResponseBody
	public JsonResult findByRoleId(Integer roleIds){
		List<Function> functions=funcService.findByRoleId(roleIds,1);
		return JsonResult.buildSuccessResult("查询成功", functions);
		
	}
	
	@PostMapping("/deleteFunction")
	@ResponseBody
	public JsonResult deleteFunction(String funcIds){
		Integer rows=funcService.deleteFunction(funcIds);
		if (rows > 0) {
			return JsonResult.buildSuccessResult("删除成功！");
		} else {
			return JsonResult.buildFailureResult(-120, "删除失败！");
		}
	}

}


