package com.zhidi.system.controller;

import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.List;
import java.util.UUID;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.zhidi.common.result.JsonResult;
import com.zhidi.common.result.PageBean;
import com.zhidi.system.entity.Product;
import com.zhidi.system.entity.ProductCategory;
import com.zhidi.system.entity.ProductImages;
import com.zhidi.system.service.IProductImagesService;
import com.zhidi.system.service.IProductService;
import com.zhidi.system.service.impl.ProductCategoryServiceImpl;

/**
*2017年10月31日
*@author 作者: Zhang
*描述：
*/
@Controller
@RequestMapping("/system/product")
public class ProductController {
	
	@Autowired
	protected IProductService productService;
	
	@Autowired
	protected IProductImagesService imagesService;
	
	@Autowired
	protected ProductCategoryServiceImpl categoryService;
	
	/**
	 * 查询展示产品，如果没有传入页数则展示第一页
	 * @return
	 */
	@PostMapping("/listProduct")
	@ResponseBody
	public  JsonResult listProduct(PageBean<Product> page){
		page=productService.findByPage(page);
		return JsonResult.buildSuccessResult("操作成功", page);
	}
	
	@GetMapping("/list")
	public  String listProduct1(){
		return "system/product/listProduct";
	}
	
	/**
	 * 添加产品返回到添加的jsp
	 * @return
	 */
	@GetMapping("/addProduct")
	public String addProduct(Model model){
		List<ProductCategory> list=categoryService.findAll();
		model.addAttribute("Category", list);
		return "system/product/addProduct";
	}
	
	/**
	 * 添加产品
	 * 文件上传 图片，保存到数据库
	 * @param file
	 * @param product
	 * @param images
	 * @param session
	 * @return
	 * @throws IllegalStateException
	 * @throws IOException
	 */
	@RequestMapping("/doAddProduct")
	@ResponseBody
	public JsonResult doAddProduct(MultipartFile file,Product product, ProductImages images ,HttpSession session)throws IllegalStateException, IOException{
		
		product.setCreateTime(new Date());
		product.setUpdateTime(new Date());
		int rows=productService.save(product);
		if(rows>0){
			//获得刚刚添加的id，保存到产品图片表
			int maxId=productService.findByMaxId();
			images.setProductId(maxId);
			
			
			return JsonResult.buildSuccessResult("添加成功");
			
		}else{
			return JsonResult.buildFailureResult(rows,"添加失败");
		}
	}
	
	/**
	 * 文件上传 图片，保存到数据库
	 * @param file
	 * @return
	 * @throws IllegalStateException
	 * @throws IOException
	 */
//	@PostMapping("/uploadImg")
//	public String upload(MultipartFile file) throws IllegalStateException, IOException{
//		if(file.isEmpty()){
//			throw new RuntimeException("未上传任何数据!");
//		}
//		
//		//获取上传文件的信息
//		String filename = file.getOriginalFilename();
//		String contentType = file.getContentType();
//		long size = file.getSize();
//		
//		String ext = filename.substring(filename.lastIndexOf("."));
//		String newName = UUID.randomUUID().toString().replace("-", "")+ext;
//		File f = new File("D:\\upload", newName);
//		//获得文件保存的路径
//		String path=f.getAbsolutePath();
//		
//		//将上传的文件写入到指定的位置
//		file.transferTo(f);
//		
//		//调用Service将上传文件的信息写入到数据库中
//		
//		
//		//将请求重定向到list方法处理分页请求
//		return "redirect:system/product/addProduct";
//	}
}

